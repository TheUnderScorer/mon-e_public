name: Build

on:
  repository_dispatch:
    types: [build]

env:
  NX_BRANCH: ${{ github.event.client_payload.number || github.event.client_payload.ref }}
  COMMIT_SHA: ${{ github.event.client_payload.sha }}
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
jobs:
  preview-ios-build:
    strategy:
      matrix:
        profile: [preview, preview-simulator]
    name: Preview iOS Build
    runs-on: macos-latest

    steps:
      - name: Set status
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'Preview iOS build ${{matrix.profile}}'
          repository: ${{ secrets.REPOSITORY }}
          description: 'Pending'
          state: 'pending'
          sha: ${{ env.COMMIT_SHA }}
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2

      - name: Install macOS dependencies
        run: |
          brew install fastlane

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm install

      - name: Build
        run: npx nx run mobile:build --platform ios --profile ${{matrix.profile}} --local --no-interactive --output=dist/Mone.ipa

      - name: Upload built app
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mone.${{matrix.profile}}.ipa
          path: apps/mobile/dist/Mone.ipa

      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        env:
          URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          server_address: smtp.gmail.com
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          # Server port, default 25:
          server_port: 465
          secure: true
          # Required mail subject:
          subject: Mone iOS Preview Build
          # Required recipients' addresses:
          to: przemyslawzydek@gmail.com
          # Required sender full name (address can be skipped):
          from: GitHub # <user@example.com>
          # Optional plain body:
          body: 'Build job of ${{github.repository}} completed successfully! Artifacts link: ${{env.URL}}'
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low

      - name: Set status
        uses: Sibz/github-status-action@v1
        if: failure()
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'Preview iOS build ${{matrix.profile}}'
          description: 'Failure'
          repository: ${{ secrets.REPOSITORY }}
          state: 'failure'
          sha: ${{ env.COMMIT_SHA }}

      - name: Set status
        uses: Sibz/github-status-action@v1
        if: success()
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          repository: ${{ secrets.REPOSITORY }}
          context: 'Preview iOS build ${{matrix.profile}}'
          description: 'Success'
          state: 'success'
          sha: ${{ env.COMMIT_SHA }}


