name: Test & release

on:
  repository_dispatch:
    types: [testAndRelease]

env:
  COMMIT_SHA: ${{ github.event.client_payload.sha }}
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
jobs:
  unit-tests-and-lint:
    name: Unit tests and lint
    runs-on: ubuntu-latest

    steps:
      - name: Output metadata
        run: |
          echo "sha=${{ env.COMMIT_SHA }}" >> ${GITHUB_OUTPUT}
      - name: Set status
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'Unit tests and lint'
          description: 'Pending'
          repository: ${{ secrets.REPOSITORY }}
          state: 'pending'
          sha: ${{ env.COMMIT_SHA }}
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.x

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Set status
        uses: Sibz/github-status-action@v1
        if: failure()
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'Unit tests and lint'
          description: 'Failure'
          state: 'failure'
          repository: ${{ secrets.REPOSITORY }}
          sha: ${{ env.COMMIT_SHA }}

      - name: Set status
        uses: Sibz/github-status-action@v1
        if: success()
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'Unit tests and lint'
          description: 'Success'
          repository: ${{ secrets.REPOSITORY }}
          state: 'success'
          sha: ${{ env.COMMIT_SHA }}
  ios-e2e:
    name: iOS E2E tests
    runs-on: macos-latest

    steps:
      - name: Set status
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'iOS E2E tests'
          repository: ${{ secrets.REPOSITORY }}
          description: 'Pending'
          state: 'pending'
          sha: ${{ env.COMMIT_SHA }}
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.x

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: Install macOS dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2

      - name: Start iPhone
        uses: futureware-tech/simulator-action@v3
        with:
          model: 'iPhone 14'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: detox build --configuration ios.sim.local

      - name: Run tests
        run: detox test --configuration ios.sim.local

      - name: Upload built app
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mone.app
          path: dist/Mone.app

      - name: Upload detox artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: .detox-artifacts
          path: .detox-artifacts

      - name: Set status
        uses: Sibz/github-status-action@v1
        if: failure()
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          context: 'iOS E2E tests'
          description: 'Failure'
          repository: ${{ secrets.REPOSITORY }}
          state: 'failure'
          sha: ${{ env.COMMIT_SHA }}

      - name: Set status
        uses: Sibz/github-status-action@v1
        if: success()
        with:
          authToken: ${{ secrets.CI_GITHUB_TOKEN }}
          repository: ${{ secrets.REPOSITORY }}
          context: 'iOS E2E tests'
          description: 'Success'
          state: 'success'
          sha: ${{ env.COMMIT_SHA }}

